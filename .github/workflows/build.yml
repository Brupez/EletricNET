name: CI Pipeline
on:
  push:
    branches: [master]
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  sonarqube:
    name: SonarQube Analysis
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'temurin'

      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Run Checkstyle
        run: |
          cd backend
          mvn checkstyle:check

      - name: Build and analyze with SonarQube
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          cd backend
          mvn -B -DskipTests verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
          -Dsonar.projectKey=Brupez_EletricNET \
          -Dsonar.organization=eletricnet \
          -Dsonar.host.url=https://sonarcloud.io

  deploy:
    name: Deploy Application
    needs: sonarqube
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Deploy with Docker Compose
        run: |
          docker compose -f docker-compose.yml pull
          docker compose -f docker-compose.yml up -d --remove-orphans
          docker container prune -f
          docker image prune -af
          docker builder prune -af

      - name: Verify application is running
        run: |
          # Wait for application to be ready
          for i in {1..10}; do
            if curl -s http://localhost >/dev/null; then
              echo "Application is ready"
              exit 0
            fi
            sleep 5
          done
          echo "Application failed to start"
          exit 1

  lighthouse:
    name: Lighthouse Audits
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: browser-actions/setup-chrome@v1

      - name: Run Lighthouse Audit
        uses: treosh/lighthouse-ci-action@v12
        with:
          urls: "http://localhost:3000"
          uploadArtifacts: true
          temporaryPublicStorage: true

      - name: Format results
        id: format_results
        run: |
          SCORES=$(jq -r '[.categories[] | {id: .id, score: (.score*100|round)}]' .lighthouseci/lhr-*.json)
          echo "SCORES=${SCORES}" >> $GITHUB_OUTPUT

      - name: Post PR comment
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const scores = JSON.parse(`${{ steps.format_results.outputs.SCORES }}`);
            let comment = "## âš¡ Lighthouse Results\n\n";
            
            scores.forEach(({id, score}) => {
              const emoji = score >= 90 ? 'ðŸŸ¢' : score >= 50 ? 'ðŸŸ ' : 'ðŸ”´';
              comment += `- ${emoji} ${id}: ${score}/100\n`;
            });
            
            comment += "\n[View full report](LINK_TO_REPORT)";
            
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

  cleanup:
    name: Cleanup
    needs: lighthouse
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Stop containers
        run: |
          docker compose -f docker-compose.yml down
          docker container prune -f
          docker image prune -af
          docker builder prune -af