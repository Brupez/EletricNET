name: Lighthouse CI
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  lighthouse:
    name: Lighthouse CI
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Chrome
        uses: browser-actions/setup-chrome@v1

      - name: Start containers
        run: |
          docker-compose -f docker-compose.yml up -d
          sleep 10
          curl --retry 5 --retry-delay 5 --retry-all-errors http://localhost

      - name: Run Lighthouse Audit
        id: lighthouse_audit
        uses: treosh/lighthouse-ci-action@v12
        with:
          urls: "http://localhost"
          uploadArtifacts: true
          temporaryPublicStorage: true

      - name: Format Lighthouse score
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const fs = require('fs');
            const reportPath = './.lighthouseci/lhr-*.json';
            const reportFile = fs.readdirSync('./.lighthouseci')
              .find(f => f.startsWith('lhr-') && f.endsWith('.json'));
            
            if (!reportFile) {
              core.setFailed('No Lighthouse report found');
              return;
            }
            
            const report = JSON.parse(fs.readFileSync(`./.lighthouseci/${reportFile}`, 'utf8'));
            const { categories } = report;
            
            const formatScore = (score) => Math.round((score * 100));
            
            const score = res => res >= 90 ? 'üü¢' : res >= 50 ? 'üü†' : 'üî¥'

            const comment = [
                `‚ö°Ô∏è [Lighthouse report](${Object.values(links)[0]}) for the changes in this PR:`,
                '| Category | Score |',
                '| --- | --- |',
                `| ${score(result.performance)} Performance | ${result.performance} |`,
                `| ${score(result.accessibility)} Accessibility | ${result.accessibility} |`,
                `| ${score(result['best-practices'])} Best practices | ${result['best-practices']} |`,
                `| ${score(result.seo)} SEO | ${result.seo} |`,
                `| ${score(result.pwa)} PWA | ${result.pwa} |`,
                ' ',
                `*Lighthouse ran on [${Object.keys(links)[0]}](${Object.keys(links)[0]})*`
            ].join('\n')
            
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
            
      - name: Stop containers
        if: always()
        run: |
          docker-compose -f docker-compose.yml down
          docker volume prune -f
            

